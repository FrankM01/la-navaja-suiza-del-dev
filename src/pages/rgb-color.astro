---
import SectionContainer from "@/components/SectionContainer.astro";
import Layout from "@/layouts/Layout.astro";
---

<Layout
	title="RGB Color"
	description="Generador de colores RGB. Y visualizarlo en tu navegador."
>
	<main class="px-4 pb-4">
		<SectionContainer>
			<div
				class="flex flex-col justify-center items-center text-white/70 text-3xl font-bold p-5 m-2"
			>
				<label class="pb-2" for="red">Red (R)</label>
				<input
					id="red"
					type="range"
					min="0"
					max="255"
					value="23"
					step="1"
				/>
				<p id="red-text"></p>
			</div>
			<div
				class="flex flex-col justify-center items-center text-white/70 text-3xl font-bold p-5 m-2"
			>
				<label class="pb-2" for="green">Green (G)</label>
				<input
					id="green"
					type="range"
					min="0"
					max="255"
					value="41"
					step="1"
				/>
				<p id="green-text"></p>
			</div>
			<div
				class="flex flex-col justify-center items-center text-white/70 text-3xl font-bold p-5 m-2"
			>
				<label class="pb-2" for="blue">Blue (B)</label>
				<input
					id="blue"
					type="range"
					min="0"
					max="255"
					value="56"
					step="1"
				/>
				<p id="blue-text"></p>
			</div>
		</SectionContainer>
	</main>
</Layout>

<script>
	const inputRed = document.getElementById("red");
	const inputGreen = document.getElementById("green");
	const inputBlue = document.getElementById("blue");

	const redText = document.getElementById("red-text");
	const greenText = document.getElementById("green-text");
	const blueText = document.getElementById("blue-text");

	let red = (inputRed as HTMLInputElement).value;
	let green = (inputGreen as HTMLInputElement).value;
	let blue = (inputBlue as HTMLInputElement).value;

	redText.innerText = red;
	greenText.innerText = green;
	blueText.innerText = blue;

	function updateColor(red, green, blue) {
		const colorRGB = `rgb(${red}, ${green}, ${blue})`;
		document.body.style.backgroundColor = colorRGB;
	}

	// *For update RED
	inputRed.addEventListener("change", (e) => {
		red = (e.target as HTMLInputElement).value;
		redText.innerText = red;
		updateColor(red, green, blue);
	});

	inputGreen.addEventListener("change", (e) => {
		green = (e.target as HTMLInputElement).value;
		greenText.innerText = green;
		updateColor(red, green, blue);
	});

	inputBlue.addEventListener("change", (e) => {
		blue = (e.target as HTMLInputElement).value;
		blueText.innerText = blue;
		updateColor(red, green, blue);
	});
</script>
